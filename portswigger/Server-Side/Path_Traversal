How to prevent path traversal:

The input must be compared to a whitelist.If that isn't possible for the required functionality, then the validation should verify that the input contains only permitted content
such as purely alphanumeric characters.

The application should append the input to the base directory and use a platform filesystem API to canonicalize the path. 
It should verify that the canonicalized path starts with the expected base directory.(Accept the input only if it really start with your base_directory)

File file = new File(BASE_DIRECTORY, userInput);
if (file.getCanonicalPath().startsWith(BASE_DIRECTORY)) {
    // process file
}

-----------Payloads

On Windows, both ../ and ..\ are valid directory traversal sequences.

You might be able to use an absolute path from the filesystem root, such as filename=/etc/passwd, to directly reference a file without using any traversal sequences. 

You might be able to use nested traversal sequences, such as ....// or ....\/, which will revert to simple traversal sequences when the inner sequence is stripped. 

(In case of strip)
In some contexts, such as in a URL path or the filename parameter of a multipart/form-data request, web servers may strip any directory traversal sequences before passing your input to
the application. In this cases you can try to url decode or url double decode the ../ characters, resulting in %2e%2e%2f or %252e%252e%252f respectively. 
Various non-standard encodings such as ..%c0%af or ..%ef%bc%8f, may also do the trick. 

Sometimes an application only require that the user-supplied filename must start with the expected base folder, such as /var/www/images. In this case you can simply do
/var/www/images/../../..

filename=../../../etc/passwd%00.png Is a null byte injection if you need to enter a png file.

